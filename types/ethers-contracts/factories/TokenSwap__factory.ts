/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { TokenSwap, TokenSwapInterface } from "../TokenSwap.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_tokenA",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_tokenB",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "tokenASymbol",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokkenAamount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "tokenBSymbol",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokkenBamount",
        "type": "uint256"
      }
    ],
    "name": "swapped",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "OurBalanceBLT",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "availableBalance_",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "OurBalanceSLT",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "availableBalance_",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      }
    ],
    "name": "addLiquidityTokenA",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      }
    ],
    "name": "addLiquidityTokenB",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "rate",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      }
    ],
    "name": "swapAToB",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      }
    ],
    "name": "swapBToA",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokenA",
    "outputs": [
      {
        "internalType": "contract IERC20",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokenASymbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokenB",
    "outputs": [
      {
        "internalType": "contract IERC20",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokenBSymbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040526003600455348015610014575f5ffd5b50604051610e12380380610e1283398101604081905261003391610191565b5f80546001600160a01b038085166001600160a01b031992831617909255600180549284169290911691909117905561006a61007b565b506100736100fa565b5050506103c4565b5f8054604080516395d89b4160e01b815290516060936001600160a01b03909316926395d89b4192600480820193918290030181865afa1580156100c1573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526100e891908101906101d6565b905060026100f6828261030a565b5090565b600154604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301925f9291908290030181865afa158015610141573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261016891908101906101d6565b905060036100f6828261030a565b80516001600160a01b038116811461018c575f5ffd5b919050565b5f5f604083850312156101a2575f5ffd5b6101ab83610176565b91506101b960208401610176565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156101e6575f5ffd5b81516001600160401b038111156101fb575f5ffd5b8201601f8101841361020b575f5ffd5b80516001600160401b03811115610224576102246101c2565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610252576102526101c2565b604052818152828201602001861015610269575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b600181811c9082168061029a57607f821691505b6020821081036102b857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561030557805f5260205f20601f840160051c810160208510156102e35750805b601f840160051c820191505b81811015610302575f81556001016102ef565b50505b505050565b81516001600160401b03811115610323576103236101c2565b610337816103318454610286565b846102be565b6020601f821160018114610369575f83156103525750848201515b5f19600385901b1c1916600184901b178455610302565b5f84815260208120601f198516915b828110156103985787850151825560209485019460019092019101610378565b50848210156103b557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610a41806103d15f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c80635d1bbb261161006e5780635d1bbb261461012d5780635f64b55b14610140578063859497881461015357806396b565ff14610166578063e395c2901461016e578063e757de0c14610166575f5ffd5b80630357b1d4146100aa5780630fc63d10146100bf5780632c4e722e146100ee57806338720f7214610105578063570db0d414610118575b5f5ffd5b6100bd6100b8366004610847565b610176565b005b5f546100d1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f760045481565b6040519081526020016100e5565b6100bd610113366004610847565b6101ec565b610120610483565b6040516100e5919061085e565b6100bd61013b366004610847565b61050f565b6001546100d1906001600160a01b031681565b6100bd610161366004610847565b610546565b6100f76107cb565b61012061083a565b5f546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f19906044015b6020604051808303815f875af11580156101c4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e89190610893565b5050565b5f546040516370a0823160e01b815233600482018190529183916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610236573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025a91906108b9565b10156102ad5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820546f6b656e4120746f20737761700000000000000060448201526064015b60405180910390fd5b5f600454836102bc91906108d0565b5f546040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018790529293509116906323b872dd906064016020604051808303815f875af1158015610313573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103379190610893565b61037c5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90481d1c985b9cd9995c8819985a5b195960521b60448201526064016102a4565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af11580156103cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f09190610893565b6104355760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90881d1c985b9cd9995c8819985a5b195960521b60448201526064016102a4565b816001600160a01b03167fe4c8479e673208c63188e1e1fefd863826de17c551204b60f8ed2b956d7e77c560028560038560405161047694939291906109cf565b60405180910390a2505050565b60038054610490906108f9565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc906108f9565b80156105075780601f106104de57610100808354040283529160200191610507565b820191905f5260205f20905b8154815290600101906020018083116104ea57829003601f168201915b505050505081565b6001546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f19906044016101a8565b5f546040516370a0823160e01b815233600482018190529183916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610590573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b491906108b9565b10156106025760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820546f6b656e4220746f20737761700000000000000060448201526064016102a4565b5f6004548361061191906108d0565b6001546040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018790529293509116906323b872dd906064016020604051808303815f875af1158015610669573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068d9190610893565b6106d25760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90481d1c985b9cd9995c8819985a5b195960521b60448201526064016102a4565b5f5460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af1158015610721573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107459190610893565b61078a5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90881d1c985b9cd9995c8819985a5b195960521b60448201526064016102a4565b816001600160a01b03167fe4c8479e673208c63188e1e1fefd863826de17c551204b60f8ed2b956d7e77c560038560028560405161047694939291906109cf565b5f80546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610811573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083591906108b9565b905090565b60028054610490906108f9565b5f60208284031215610857575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f602082840312156108a3575f5ffd5b815180151581146108b2575f5ffd5b9392505050565b5f602082840312156108c9575f5ffd5b5051919050565b80820281158282048414176108f357634e487b7160e01b5f52601160045260245ffd5b92915050565b600181811c9082168061090d57607f821691505b60208210810361092b57634e487b7160e01b5f52602260045260245ffd5b50919050565b80545f90600181811c9082168061094957607f821691505b60208210810361096757634e487b7160e01b5f52602260045260245ffd5b818652602086018180156109825760018114610998576109c4565b60ff198516825283151560051b820195506109c4565b5f878152602090205f5b858110156109be578154848201526001909101906020016109a2565b83019650505b505050505092915050565b608081525f6109e16080830187610931565b85602084015282810360408401526109f98186610931565b9150508260608301529594505050505056fea26469706673582212204de7e97c1716c8e01f86c0f03478b4bbff8e3ed79a962a660318071b331531ef64736f6c634300081c0033";

  
      type TokenSwapConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: TokenSwapConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class TokenSwap__factory extends ContractFactory {
    
      constructor(...args: TokenSwapConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_tokenA: AddressLike, _tokenB: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_tokenA, _tokenB, overrides || {});
    };
    override deploy(_tokenA: AddressLike, _tokenB: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_tokenA, _tokenB, overrides || {}) as Promise<TokenSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): TokenSwap__factory {
      return super.connect(runner) as TokenSwap__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): TokenSwapInterface {
      return new Interface(_abi) as TokenSwapInterface;
    }
    
    override attach(address: string | Addressable): TokenSwap {
      return super.attach(address) as TokenSwap;
    }
  static connect(address: string, runner?: ContractRunner | null): TokenSwap {
      return new Contract(address, _abi, runner) as unknown as TokenSwap;
    }
  }

  
  